from database_pattern import *
from vk_api.keyboard import VkKeyboardColor, VkKeyboard
from config import *





async def add_user(user_id):
    try:
        u = await Users.get_or_none(user_id=user_id)
        if u is None:
            user_info =await bot.api.users.get(user_ids=user_id, fields='city')
            first_name = user_info[0].first_name
            user_id = int(user_id)
            await Users.create(user_id=user_id, name=first_name, balance=0, donut=0, happiness=10, hunger=10,
                         health=10, energy=10)
        else:
            return True
    except:
        print("–ø—Ä–æ–±–ª–µ–º–∞ –≤ add_user")

# –ö–∏—Ä–∏–∏–∏–∏–ª —Ç–∞–∫–æ–π –¥–µ–±–∏–∏–∏–∏–∏–∏–∏–∏–ª

async def check_training(user_id):
    try:
        u = await Users.get(user_id=user_id)
        if u.train:
            return True
        else:
            return False
    except:
        return False
cvgbfg
fghgfdfghf!!
fghgfg
fggg

@bot.on.message(text=["–Ω–∞—á–∞—Ç—å", "–Ω–∞—á–∞–ª–æ", "—Å—Ç–∞—Ä—Ç"], lower=True)
async def start(ans: Message):
    if await check_training(ans.from_id):
        await ans("–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –æ–±—É—á–µ–Ω–∏–µ!")
        await menu(ans)
    else:
        await add_user(ans.from_id)
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("–Ø –≥–æ—Ç–æ–≤!", VkKeyboardColor.POSITIVE)
        keyboard = keyboard.get_keyboard()
        await ans("–¢—ã –≥–æ—Ç–æ–≤ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –ø–∏—Ç–æ–º—Ü–∞—Ö?", keyboard=keyboard)
        await bot.branch.add(ans.peer_id, "start_branch")


@bot.branch.simple_branch("start_branch")
async def start_branch(ans: Message, response=None):
    if ans.text.lower() == "—è –≥–æ—Ç–æ–≤!" or ans.payload == '1':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üêï –°–æ–±–∞–∫–∞", VkKeyboardColor.POSITIVE)
        keyboard.add_button("üêà –ö–æ—à–∫–∞", VkKeyboardColor.POSITIVE)
        keyboard = keyboard.get_keyboard()
        await ans("–í—ã–±–µ—Ä–∏ —Å–≤–æ–µ –±–æ–π—Ü–∞", keyboard=keyboard)

    elif ans.text == "üêï –°–æ–±–∞–∫–∞":
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("–ë–µ—Ä—É!", VkKeyboardColor.POSITIVE, payload=11)
        keyboard.add_line()
        keyboard.add_button("–Ø –µ—â–µ –ø–æ–¥—É–º–∞—é...", VkKeyboardColor.NEGATIVE, payload=1)
        keyboard = keyboard.get_keyboard()
        await ans("–≠—Ç–æ —Å–æ–±–∫–∞ –æ—á–µ–Ω—å –∫—Ä—É—Ç–∞—è", keyboard=keyboard)


    elif ans.text == "üêà –ö–æ—à–∫–∞":
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("–ë–µ—Ä—É!", VkKeyboardColor.POSITIVE, payload=12)
        keyboard.add_line()
        keyboard.add_button("–Ø –µ—â–µ –ø–æ–¥—É–º–∞—é...", VkKeyboardColor.NEGATIVE, payload=1)
        keyboard = keyboard.get_keyboard()
        await ans("–≠—Ç–æ –∫–æ—à–∫–∞ –æ—á–µ–Ω—å –∫—Ä—É—Ç–∞—è", keyboard=keyboard)

    elif ans.payload == '11':
        u = await Users.get(user_id=ans.peer_id)
        u.enimal = "—Å–æ–±–∞–∫–∞"
        await u.save()
        await ans("–ö–∞–∫ –±—É–¥—É—Ç –∑–≤–∞—Ç—å –≤–∞—â–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞?")

    elif ans.payload == '12':
        u = await Users.get(user_id=ans.peer_id)
        u.enimal = "–∫–æ—à–∫–∞"
        await u.save()
        await ans("–ö–∞–∫ –±—É–¥—É—Ç –∑–≤–∞—Ç—å –≤–∞—â–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞?")

    else:
        name = ans.text
        u = await Users.get(user_id=ans.peer_id)
        u.nickname = name
        u.train = True
        await u.save()
        await ans(f"{name} –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏–º—è!")
        await menu(ans)
        await bot.branch.exit(ans.peer_id)






@bot.on.message(text="1", lower=True)
async def menu(ans: Message):
    pass



@bot.on.message(PayloadRule(10))
@bot.on.message(text="–º–µ–Ω—é", lower=True)
async def menu(ans: Message):


    # await add_user(ans.from_id)

    # u = await Users.get(user_id=ans.from_id)
    # print(u.energy)

    if await check_training(ans.from_id):
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üçñ –ü–æ–∫–æ—Ä–º–∏—Ç—å", VkKeyboardColor.POSITIVE)
        keyboard.add_button("‚ù§Ô∏è –í—ã–ª–µ—á–∏—Ç—å", VkKeyboardColor.POSITIVE)
        keyboard.add_button("‚öΩ –ü–æ–∏–≥—Ä–∞—Ç—å", VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button("üè™ –ú–∞–≥–∞–∑–∏–Ω", VkKeyboardColor.NEGATIVE)
        keyboard.add_button("üè• –ë–æ–ª—å–Ω–∏—Ü–∞", VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button("üë• –ö–ª—É–±—ã", VkKeyboardColor.PRIMARY)
        keyboard.add_button("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", VkKeyboardColor.PRIMARY)
        keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å–∫–∞", VkKeyboardColor.PRIMARY)
        # keyboard.add_line()
        # keyboard.add_button("üèó –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", VkKeyboardColor.NEGATIVE)
        keyboard = keyboard.get_keyboard()
        await ans("–ú–µ–Ω—é:", keyboard=keyboard)
    else:
        await ans("–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É."
                             "\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ \"–ù–∞—á–∞—Ç—å\"")



bot.run_polling(skip_updates=True, on_startup=init_db)
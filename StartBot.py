from database_pattern import *
from vk_api.keyboard import VkKeyboardColor, VkKeyboard
from config import *





async def add_user(user_id):
    try:
        u = await Users.get_or_none(user_id=user_id)
        if u is None:
            user_info =await bot.api.users.get(user_ids=user_id, fields='city')
            first_name = user_info[0].first_name
            user_id = int(user_id)
            await Users.create(user_id=user_id, name=first_name, balance=0, donut=0, happiness=10, hunger=10,
                         health=10, energy=10)
            await UsersBoolean.create(user_id=user_id)
        else:
            return True
    except:
        print("–ø—Ä–æ–±–ª–µ–º–∞ –≤ add_user")

# –ö–∏—Ä–∏–∏–∏–∏–ª —Ç–∞–∫–æ–π –¥–µ–±–∏–∏–∏–∏–∏–∏–∏–∏–ª

async def check_training(user_id):
    try:
        u = await Users.get(user_id=user_id)
        if u.train:
            return True
        else:
            return False
    except:
        return False
cvgbfg
fghgfdfghf!!
fghgfg
fggg

@bot.on.message(text=["–Ω–∞—á–∞—Ç—å", "–Ω–∞—á–∞–ª–æ", "—Å—Ç–∞—Ä—Ç"], lower=True)
async def start(ans: Message):

    if await check_training(ans.from_id):
        await ans("–í—ã —É–∂–µ –ø—Ä–æ—à–ª–∏ –æ–±—É—á–µ–Ω–∏–µ!")
        await menu(ans)
    else:
        await add_user(ans.from_id)
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("–Ø –≥–æ—Ç–æ–≤!", VkKeyboardColor.POSITIVE)
        keyboard = keyboard.get_keyboard()
        await ans("–¢—ã –≥–æ—Ç–æ–≤ –∑–∞–±–æ—Ç–∏—Ç—å—Å—è –æ –ø–∏—Ç–æ–º—Ü–∞—Ö?", keyboard=keyboard)
        await bot.branch.add(ans.peer_id, "start_branch")



@bot.branch.simple_branch("start_branch")
async def start_branch(ans: Message, response=None, payload=None):
    # flagg = False
    if ans.text.lower() == "—è –≥–æ—Ç–æ–≤!" or ans.payload == '1':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üêï –°–æ–±–∞–∫–∞", VkKeyboardColor.POSITIVE)
        keyboard.add_button("üêà –ö–æ—à–∫–∞", VkKeyboardColor.POSITIVE)
        keyboard = keyboard.get_keyboard()
        await ans("–í—ã–±–µ—Ä–∏ —Å–≤–æ–µ –±–æ–π—Ü–∞", keyboard=keyboard)

    elif ans.text == "üêï –°–æ–±–∞–∫–∞":
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button("–ë–µ—Ä—É!", VkKeyboardColor.POSITIVE, payload=11)
        keyboard.add_line()
        keyboard.add_button("–Ø –µ—â–µ –ø–æ–¥—É–º–∞—é...", VkKeyboardColor.NEGATIVE, payload=1)
        keyboard = keyboard.get_keyboard()
        await ans("–≠—Ç–æ —Å–æ–±–∫–∞ –æ—á–µ–Ω—å –∫—Ä—É—Ç–∞—è", keyboard=keyboard)


    elif ans.text == "üêà –ö–æ—à–∫–∞":
        keyboard = VkKeyboard(one_time=True)
        keyboard.add_button("–ë–µ—Ä—É!", VkKeyboardColor.POSITIVE, payload=12)
        keyboard.add_line()
        keyboard.add_button("–Ø –µ—â–µ –ø–æ–¥—É–º–∞—é...", VkKeyboardColor.NEGATIVE, payload=1)
        keyboard = keyboard.get_keyboard()
        await ans("–≠—Ç–æ –∫–æ—à–∫–∞ –æ—á–µ–Ω—å –∫—Ä—É—Ç–∞—è", keyboard=keyboard)

    elif ans.payload == '11':
        u = await Users.get(user_id=ans.peer_id)
        u.enimal = "—Å–æ–±–∞–∫–∞"
        await u.save()
        await ans("–ö–∞–∫ –±—É–¥—É—Ç –∑–≤–∞—Ç—å –≤–∞—â–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞?")
        b = await UsersBoolean.get(user_id=ans.peer_id)
        b.train_flag = True
        await b.save()


        # await start_branch(ans, payload=21)

    elif ans.payload == '12':
        u = await Users.get(user_id=ans.peer_id)
        u.enimal = "–∫–æ—à–∫–∞"
        await u.save()
        await ans("–ö–∞–∫ –±—É–¥—É—Ç –∑–≤–∞—Ç—å –≤–∞—â–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞?")
        b = await UsersBoolean.get(user_id=ans.peer_id)
        b.train_flag = True
        await b.save()

        # await start_branch(ans, payload=21)

    elif ans.payload == '13':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üçñ –ü–æ–∫–æ—Ä–º–∏—Ç—å", VkKeyboardColor.DEFAULT, payload=13)
        keyboard.add_button("‚ù§ –í—ã–ª–µ—á–∏—Ç—å", VkKeyboardColor.DEFAULT, payload=13)
        keyboard.add_button("‚öΩ –ü–æ–∏–≥—Ä–∞—Ç—å", VkKeyboardColor.DEFAULT, payload=13)
        keyboard.add_line()
        keyboard.add_button("üè™ –ú–∞–≥–∞–∑–∏–Ω", VkKeyboardColor.POSITIVE, payload=14)
        keyboard.add_button("üè• –ë–æ–ª—å–Ω–∏—Ü–∞", VkKeyboardColor.DEFAULT, payload=13)
        keyboard.add_line()
        keyboard.add_button("üë• –ö–ª—É–±—ã", VkKeyboardColor.DEFAULT, payload=13)
        keyboard.add_button("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", VkKeyboardColor.DEFAULT, payload=13)
        keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å–∫–∞", VkKeyboardColor.DEFAULT, payload=13)
        keyboard = keyboard.get_keyboard()
        await ans(
            "‚û° –ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –Ω–∞—É—á–∏—Ç—å —Ç–µ–±—è –æ–±—Ä–∞—â–∞—Ç—å—Å—è —Å–æ —Å–≤–æ–∏–º –ø–∏—Ç–æ–º—Ü–µ–º. –°–µ–π—á–∞—Å –æ–Ω —Å–∏–ª—å–Ω–æ –≥–æ–ª–æ–¥–µ–Ω üòì! –ú—ã –∂–µ –Ω–µ —Ö–æ—Ç–∏–º —á—Ç–æ–±—ã –æ–Ω —É–º–µ—Ä?\n "
            "–ù–æ –¥–ª—è –Ω–∞—á–∞–ª–æ –Ω—É–∂–Ω–æ –Ω—É–∂–Ω–æ –∫—É–ø–∏—Ç—å –Ω–µ–º–Ω–æ–≥–æ –µ–¥—ã üçñ.\n –ó–∞–π–¥–∏ –≤ üè™ –ú–∞–≥–∞–∑–∏–Ω", keyboard=keyboard)
        b = await UsersBoolean.get(user_id=ans.peer_id)
        b.train_flag = False
        await b.save()

    elif ans.payload == '14':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("ü•õ –ú–æ–ª–æ–∫–æ +5üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("ü•ï –ú–æ—Ä–∫–æ–≤—å +10üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üçû –•–ª–µ–± +15üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üç≥ –Ø–∏—á–Ω–∏—Ü–∞ +20üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üéÇ –¢–æ—Ä—Ç +25üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üçö –†–∏—Å +30üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üçï –ü–∏—Ü—Ü–∞ +35üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üçó –ö—É—Ä–∏–Ω–∞—è –Ω–æ–∂–∫–∞ +40üçñ -üí∏", VkKeyboardColor.POSITIVE, payload=15)
        keyboard.add_line()
        keyboard.add_button("ü•© –ú—è—Å–æ +45üçñ -üí∏", VkKeyboardColor.DEFAULT, payload=14)
        keyboard.add_line()
        keyboard.add_button("üîô –ù–∞–∑–∞–¥", VkKeyboardColor.DEFAULT, payload=14)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –ï–¥–∞ —Ä–∞–∑–ª–∏—á–∞–µ—Ç—Å—è –ø–æ —Ü–µ–Ω–µ –∏ —Å—ã—Ç–æ—Å—Ç–∏. –î–∞–≤–∞–π –∫—É–ø–∏–º üçó –ö—É—Ä–∏–Ω—É—é –Ω–æ–∂–∫—É. \n "
                  "40üçñ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—ã—Ç–æ—Å—Ç—å –ø—Ä–æ–¥—É–∫—Ç–∞ –µ–¥—ã, –∞ 100üí∏ - –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Ü–µ–Ω—É –ø—Ä–æ–¥—É–∫—Ç–∞", keyboard=keyboard)

    elif ans.payload == '15':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("ü•õ –ú–æ–ª–æ–∫–æ - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("ü•ï –ú–æ—Ä–∫–æ–≤—å - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üçû –•–ª–µ–± - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üç≥ –Ø–∏—á–Ω–∏—Ü–∞ - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üéÇ –¢–æ—Ä—Ç - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üçö –†–∏—Å - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üçï –ü–∏—Ü—Ü–∞ - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üçó –ö—É—Ä–∏–Ω–∞—è –Ω–æ–∂–∫–∞ - 1", VkKeyboardColor.POSITIVE, payload=16)
        keyboard.add_line()
        keyboard.add_button("ü•© –ú—è—Å–æ - 0", VkKeyboardColor.DEFAULT, payload=15)
        keyboard.add_line()
        keyboard.add_button("üîô –ù–∞–∑–∞–¥", VkKeyboardColor.DEFAULT, payload=15)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –ó–¥–µ—Å—å —Ç—ã –º–æ–∂–µ—à—å –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å —Ä–∞—Ü–∏–æ–Ω —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞\n"
                  "–ü–æ–∫–æ—Ä–º–∏ –µ–≥–æ üçñ!", keyboard=keyboard)

    elif ans.payload == '16':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üçñ –ü–æ–∫–æ—Ä–º–∏—Ç—å", VkKeyboardColor.DEFAULT, payload=16)
        keyboard.add_button("‚ù§ –í—ã–ª–µ—á–∏—Ç—å", VkKeyboardColor.DEFAULT, payload=16)
        keyboard.add_button("‚öΩ –ü–æ–∏–≥—Ä–∞—Ç—å", VkKeyboardColor.DEFAULT, payload=16)
        keyboard.add_line()
        keyboard.add_button("üè™ –ú–∞–≥–∞–∑–∏–Ω", VkKeyboardColor.DEFAULT, payload=16)
        keyboard.add_button("üè• –ë–æ–ª—å–Ω–∏—Ü–∞", VkKeyboardColor.POSITIVE, payload=17)
        keyboard.add_line()
        keyboard.add_button("üë• –ö–ª—É–±—ã", VkKeyboardColor.DEFAULT, payload=16)
        keyboard.add_button("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", VkKeyboardColor.DEFAULT, payload=16)
        keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å–∫–∞", VkKeyboardColor.DEFAULT, payload=16)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –ï—Å—Ç—å —Ö–æ—Ä–æ—à–∞—è –∏ –ø–ª–æ—Ö–∞—è –Ω–æ–≤–æ—Å—Ç—å.\n"
                  "‚úÖ –•–æ—Ä–æ—à–∞—è - —Ç–≤–æ–π –ø–∏—Ç–æ–º–µ—Ü –±–æ–ª—å—à–µ –Ω–µ –≥–æ–ª–æ–¥–µ–Ω ‚ò∫! \n"
                  "‚ùå –ü–ª–æ—Ö–∞—è - –æ–Ω –ø–ª–æ—Ö–æ —Å–µ–±—è —á—É–≤—Å—Ç–≤—É–µ—Ç üòü \n"
                  "–¢–∞–∫–æ–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç, –∫–æ–≥–¥–∞ –¥–æ–ª–≥–æ –Ω–µ –∫–æ—Ä–º–∏—à—å —Å–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞. \n"
                  "–ï–º—É —Å—Ä–æ—á–Ω–æ –Ω—É–∂–Ω–æ –≤ üè• –ë–æ–ª—å–Ω–∏—Ü—É!", keyboard=keyboard)

    elif ans.payload == '17':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üíä –¢–∞–±–ª–µ—Ç–∫–∞ +10‚ù§ -üí∏", VkKeyboardColor.DEFAULT, payload=17)
        keyboard.add_line()
        keyboard.add_button("üíâ –®–ø—Ä–∏—Ü +40‚ù§ -üí∏", VkKeyboardColor.POSITIVE, payload=18)
        keyboard.add_line()
        keyboard.add_button("üîô –ù–∞–∑–∞–¥", VkKeyboardColor.DEFAULT, payload=17)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –î–∞–≤–∞–π –ø–æ–¥–ª–∞—Ç–∞–µ–º —Ç–æ–≤–µ–≥–æ –º–∞–ª—å—Ü–∞!\n"
                  "–ö—É–ø–∏ üíâ –®–ø—Ä–∏—Ü, –æ–Ω –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏—Ç –∑–¥–æ—Ä–æ–≤—å–µ —Ç–≤–æ–µ–≥–æ –ø–∏—Ç–æ–º—Ü–∞.", keyboard=keyboard)

    elif ans.payload == '18':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üçñ –ü–æ–∫–æ—Ä–º–∏—Ç—å", VkKeyboardColor.DEFAULT, payload=18)
        keyboard.add_button("‚ù§ –í—ã–ª–µ—á–∏—Ç—å", VkKeyboardColor.POSITIVE, payload=19)
        keyboard.add_button("‚öΩ –ü–æ–∏–≥—Ä–∞—Ç—å", VkKeyboardColor.DEFAULT, payload=18)
        keyboard.add_line()
        keyboard.add_button("üè™ –ú–∞–≥–∞–∑–∏–Ω", VkKeyboardColor.DEFAULT, payload=18)
        keyboard.add_button("üè• –ë–æ–ª—å–Ω–∏—Ü–∞", VkKeyboardColor.DEFAULT, payload=18)
        keyboard.add_line()
        keyboard.add_button("üë• –ö–ª—É–±—ã", VkKeyboardColor.DEFAULT, payload=18)
        keyboard.add_button("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", VkKeyboardColor.DEFAULT, payload=18)
        keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å–∫–∞", VkKeyboardColor.DEFAULT, payload=18)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –õ–µ—á–∏—Ç—å –ø–∏—Ç–æ–º—Ü–∞ –ø—Ä–∏–¥—ë—Ç—Å—è —Å–∞–º–æ–º—É.", keyboard=keyboard)

    elif ans.payload == '19':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üíä –¢–∞–±–ª–µ—Ç–∫–∞ 0", VkKeyboardColor.DEFAULT, payload=19)
        keyboard.add_line()
        keyboard.add_button("üíâ –®–ø—Ä–∏—Ü 1", VkKeyboardColor.POSITIVE, payload=20)
        keyboard.add_line()
        keyboard.add_button("üîô –ù–∞–∑–∞–¥", VkKeyboardColor.DEFAULT, payload=19)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –ó–¥–µ—Å—å –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ç–≤–æ—è –∏–º–ø—Ä–æ–≤–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∞–ø—Ç–µ—á–∫–∞ \n"
                  "–î–∞–≤–∞–π –ø–æ–¥–ª–∞—Ç–∞–µ–º —Ç–≤–æ–µ–≥–æ –ø–µ—Ç–∞ ‚ù§", keyboard=keyboard)

    elif ans.payload == '20':
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("–ó–∞–≤–µ—Ä—à–∏—Ç—å –æ–±—É—á–µ–Ω–∏–µ", VkKeyboardColor.POSITIVE, payload=100)
        keyboard = keyboard.get_keyboard()
        await ans("‚û° –í–æ—Ç –∏ –≤—Å–µ! –¢–≤–æ–µ –æ–±—É—á–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –∑–∞–±–æ—Ç—å—Å—è –æ —Å–≤–æ–µ–º –ø–∏—Ç–æ–º—Ü–µ –∏ –Ω–µ –æ–±–∏–∂–∞–π –µ–≥–æ", keyboard=keyboard)
        u = await Users.get(user_id=ans.peer_id)
        u.train = True
        await u.save()
        await bot.branch.exit(ans.peer_id)

    else:
        b = await UsersBoolean.get(user_id=ans.peer_id)
        if b.train_flag:
            print(1)
            name = ans.text
            u = await Users.get(user_id=ans.peer_id)
            u.nickname = name
            await u.save()
            keyboard = VkKeyboard(one_time=False)
            keyboard.add_button("–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å", VkKeyboardColor.POSITIVE, payload=13)
            keyboard = keyboard.get_keyboard()
            await ans(f"{name} –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏–º—è!", keyboard=keyboard)


        # await menu(ans)
        # await bot.branch.exit(ans.peer_id)






@bot.on.message(text="1", lower=True)
async def menu(ans: Message):
    pass



@bot.on.message(PayloadRule(100))
@bot.on.message(text="–º–µ–Ω—é", lower=True)
async def menu(ans: Message):


    # await add_user(ans.from_id)

    # u = await Users.get(user_id=ans.from_id)
    # print(u.energy)

    if await check_training(ans.from_id):
        keyboard = VkKeyboard(one_time=False)
        keyboard.add_button("üçñ –ü–æ–∫–æ—Ä–º–∏—Ç—å", VkKeyboardColor.POSITIVE)
        keyboard.add_button("‚ù§Ô∏è –í—ã–ª–µ—á–∏—Ç—å", VkKeyboardColor.POSITIVE)
        keyboard.add_button("‚öΩ –ü–æ–∏–≥—Ä–∞—Ç—å", VkKeyboardColor.POSITIVE)
        keyboard.add_line()
        keyboard.add_button("üè™ –ú–∞–≥–∞–∑–∏–Ω", VkKeyboardColor.NEGATIVE)
        keyboard.add_button("üè• –ë–æ–ª—å–Ω–∏—Ü–∞", VkKeyboardColor.NEGATIVE)
        keyboard.add_line()
        keyboard.add_button("üë• –ö–ª—É–±—ã", VkKeyboardColor.PRIMARY)
        keyboard.add_button("üì¢ –†–∞—Å—Å—ã–ª–∫–∞", VkKeyboardColor.PRIMARY)
        keyboard.add_button("üìä –°—Ç–∞—Ç–∏—Å–∫–∞", VkKeyboardColor.PRIMARY)
        # keyboard.add_line()
        # keyboard.add_button("üèó –°—Ç—Ä–æ–∏—Ç–µ–ª—å—Å—Ç–≤–æ", VkKeyboardColor.NEGATIVE)
        keyboard = keyboard.get_keyboard()
        await ans("–ú–µ–Ω—é:", keyboard=keyboard)
    else:
        await ans("–í—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª–∏ –∏–≥—Ä—É."
                             "\n–î–ª—è –Ω–∞—á–∞–ª–∞ –Ω–∞–ø–∏—à–∏—Ç–µ \"–ù–∞—á–∞—Ç—å\"")



bot.run_polling(skip_updates=True, on_startup=init_db)